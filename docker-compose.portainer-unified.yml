version: '3.8'

services:
  # Chatwoot Rails Application
  chatwoot_rails:
    image: ghcr.io/leomeirae/chatwoot:v4.1.0-custom
    entrypoint: docker/entrypoints/rails.sh
    command: ["bundle", "exec", "rails", "s", "-p", "3000", "-b", "0.0.0.0"]
    depends_on:
      - postgres
      - redis
      - baileys-api
    volumes:
      - chatwoot_storage:/app/storage
      - chatwoot_public:/app/public
    networks:
      - darwinai
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
      - DEFAULT_LOCALE=pt_BR
      - FRONTEND_URL=https://chatwoot.darwinai.com.br
      - INTERNAL_HOST_URL=http://chatwoot_rails:3000
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=3b50de242a58709efd8ca62c83f95425
      - POSTGRES_DATABASE=chatwoot_production
      - SECRET_KEY_BASE=a9eb2be1fb5c2d015ff2f4e76f594dff42c3a68b9f8d2e1c7a5b3f9d8e2c1a4b6f7e8d9c2a1b5f6e3d7c8a9b4f2e1d6c5a8b7f3e9d2c1a6b5f8e4d7c3a9
      - REDIS_URL=redis://:chatwoot_redis_secure_pass@redis:6379
      - REDIS_PASSWORD=chatwoot_redis_secure_pass
      # Baileys Integration
      - BAILEYS_API_URL=http://baileys-api:3025
      - BAILEYS_API_KEY=${BAILEYS_API_KEY}
      # SMTP Config
      - MAILER_SENDER_EMAIL=leonardo@darwinai.com.br
      - SMTP_DOMAIN=darwinai.com.br
      - SMTP_ADDRESS=smtp.hostinger.com
      - SMTP_PORT=587
      - SMTP_SSL=false
      - SMTP_USERNAME=leonardo@darwinai.com.br
      - SMTP_PASSWORD=@Atjlc151523
      - SMTP_AUTHENTICATION=login
      - SMTP_ENABLE_STARTTLS_AUTO=true
      - SMTP_OPENSSL_VERIFY_MODE=none
      # Other Config
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - ENABLE_ACCOUNT_SIGNUP=false
      - USE_INBOX_AVATAR_FOR_BOT=true
      - FORCE_SSL=false
      - TZ=America/Sao_Paulo
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  # Chatwoot Sidekiq (Background Jobs)
  chatwoot_sidekiq:
    image: ghcr.io/leomeirae/chatwoot:v4.1.0-custom
    command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]
    depends_on:
      - postgres
      - redis
      - baileys-api
    volumes:
      - chatwoot_storage:/app/storage
      - chatwoot_public:/app/public
    networks:
      - darwinai
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
      - DEFAULT_LOCALE=pt_BR
      - FRONTEND_URL=https://chatwoot.darwinai.com.br
      - INTERNAL_HOST_URL=http://chatwoot_rails:3000
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=3b50de242a58709efd8ca62c83f95425
      - POSTGRES_DATABASE=chatwoot_production
      - SECRET_KEY_BASE=a9eb2be1fb5c2d015ff2f4e76f594dff42c3a68b9f8d2e1c7a5b3f9d8e2c1a4b6f7e8d9c2a1b5f6e3d7c8a9b4f2e1d6c5a8b7f3e9d2c1a6b5f8e4d7c3a9
      - REDIS_URL=redis://:chatwoot_redis_secure_pass@redis:6379
      - REDIS_PASSWORD=chatwoot_redis_secure_pass
      # Baileys Integration
      - BAILEYS_API_URL=http://baileys-api:3025
      - BAILEYS_API_KEY=${BAILEYS_API_KEY}
      # SMTP Config
      - MAILER_SENDER_EMAIL=leonardo@darwinai.com.br
      - SMTP_DOMAIN=darwinai.com.br
      - SMTP_ADDRESS=smtp.hostinger.com
      - SMTP_PORT=587
      - SMTP_SSL=false
      - SMTP_USERNAME=leonardo@darwinai.com.br
      - SMTP_PASSWORD=@Atjlc151523
      - SMTP_AUTHENTICATION=login
      - SMTP_ENABLE_STARTTLS_AUTO=true
      - SMTP_OPENSSL_VERIFY_MODE=none
      # Other Config
      - RAILS_LOG_TO_STDOUT=true
      - USE_INBOX_AVATAR_FOR_BOT=true
      - FORCE_SSL=false
      - TZ=America/Sao_Paulo
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  # Baileys API for WhatsApp Integration
  baileys-api:
    image: ghcr.io/fazer-ai/baileys-api:latest
    container_name: baileys-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3025
      - LOG_LEVEL=info
      - BAILEYS_LOG_LEVEL=warn
      - BAILEYS_PRINT_QR=false
      - REDIS_URL=redis://:${REDIS_PASSWORD}@baileys-redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - WEBHOOK_RETRY_POLICY_MAX_RETRIES=3
      - WEBHOOK_RETRY_POLICY_RETRY_INTERVAL=5000
      - WEBHOOK_RETRY_POLICY_BACKOFF_FACTOR=3
      - CORS_ORIGIN=https://chatwoot.darwinai.com.br
      - BAILEYS_API_KEY=${BAILEYS_API_KEY}
      - WEBHOOK_URL=http://chatwoot_rails:3000/webhooks/whatsapp
    ports:
      - "3025:3025"
    volumes:
      - baileys_sessions:/app/sessions
      - baileys_logs:/app/logs
    depends_on:
      - baileys-redis
    networks:
      - darwinai
    command: >
      sh -c "
        bun scripts/manage-api-keys.ts create user ${BAILEYS_API_KEY} &&
        bun start
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3025/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    volumes:
      - chatwoot_postgres:/var/lib/postgresql/data
    networks:
      - darwinai
    environment:
      - POSTGRES_DB=chatwoot_production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=3b50de242a58709efd8ca62c83f95425
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  # Redis for Chatwoot
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass chatwoot_redis_secure_pass
    volumes:
      - chatwoot_redis:/data
    networks:
      - darwinai
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  # Redis for Baileys (separate instance)
  baileys-redis:
    image: redis:7-alpine
    container_name: baileys-redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - baileys_redis_data:/data
    networks:
      - darwinai
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager

  # Database Preparation (runs once)
  chatwoot_db_prepare:
    image: ghcr.io/leomeirae/chatwoot:v4.1.0-custom
    command: ["bundle", "exec", "rails", "db:chatwoot_prepare"]
    depends_on:
      - postgres
      - redis
    networks:
      - darwinai
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=3b50de242a58709efd8ca62c83f95425
      - POSTGRES_DATABASE=chatwoot_production
      - SECRET_KEY_BASE=a9eb2be1fb5c2d015ff2f4e76f594dff42c3a68b9f8d2e1c7a5b3f9d8e2c1a4b6f7e8d9c2a1b5f6e3d7c8a9b4f2e1d6c5a8b7f3e9d2c1a6b5f8e4d7c3a9
      - REDIS_URL=redis://:chatwoot_redis_secure_pass@redis:6379
      - REDIS_PASSWORD=chatwoot_redis_secure_pass
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none

volumes:
  chatwoot_storage:
    external: true
  chatwoot_public:
    external: true
  chatwoot_postgres:
    external: true
  chatwoot_redis:
    external: true
  baileys_sessions:
    driver: local
  baileys_logs:
    driver: local
  baileys_redis_data:
    driver: local

networks:
  darwinai:
    external: true 